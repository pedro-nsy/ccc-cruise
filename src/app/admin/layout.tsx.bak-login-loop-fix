"use client";
import { ReactNode, useEffect, useState, Suspense } from "react";
import { usePathname, useRouter, useSearchParams } from "next/navigation";
import { createClient } from "@supabase/supabase-js";

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!
);

function AdminGate({ children }: { children: React.ReactNode }) {
  const router = useRouter();
  const pathname = usePathname();
  const sp = useSearchParams();
  const [ready, setReady] = useState(false);

  useEffect(() => {
    let on = true;
    (async () => {
      const { data } = await supabase.auth.getSession();
      if (!on) return;
      const hasSession = !!data.session;
      if (!hasSession) {
        const next = pathname + (sp && sp.toString() ? `?${sp.toString()}` : "");
        router.replace(`/admin/login?next=${encodeURIComponent(next)}`);
      } else {
        setReady(true);
      }
    })();
    return () => { on = false; };
  }, [pathname, sp, router]);

  if (!ready) return null; // or a small spinner if you prefer

  return <>{children}</>;
}


export default function AdminLayout({ children }: { children: React.ReactNode }) {
  return (
    <Suspense fallback={null}>
      <AdminGate>{children}</AdminGate>
    </Suspense>
  );
}
