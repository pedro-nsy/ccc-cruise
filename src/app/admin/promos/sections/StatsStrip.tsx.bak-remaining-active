type StatObj = Record<"early_bird"|"artist"|"staff", number>;
type CapsObj = Record<"early_bird"|"artist"|"staff", number|null>;

export default function StatsStrip({ stats }: { stats: null | {
  created?: StatObj;
  consumed?: StatObj;   // preferred
  used?: StatObj;       // tolerated for backward-compat
  caps?: CapsObj;
} }) {
  if (!stats) {
    return (
      <section className="rounded-2xl border bg-white p-6">
        <div className="text-sm text-neutral-600">Loadingâ€¦</div>
      </section>
    );
  }

  const created: StatObj = {
    early_bird: stats.created?.early_bird ?? 0,
    artist:     stats.created?.artist ?? 0,
    staff:      stats.created?.staff ?? 0,
  };

  // prefer 'consumed', fallback to 'used'
  const consumed: StatObj = {
    early_bird: (stats.consumed?.early_bird ?? stats.used?.early_bird) ?? 0,
    artist:     (stats.consumed?.artist     ?? stats.used?.artist)     ?? 0,
    staff:      (stats.consumed?.staff      ?? stats.used?.staff)      ?? 0,
  };

  const caps: CapsObj = {
    early_bird: stats.caps?.early_bird ?? null,
    artist:     stats.caps?.artist     ?? null,
    staff:      stats.caps?.staff      ?? null,
  };

  // remaining (only meaningful with a cap)
  const remaining = {
    early_bird: typeof caps.early_bird === "number" ? Math.max(0, caps.early_bird - consumed.early_bird) : null,
    artist:     typeof caps.artist     === "number" ? Math.max(0, caps.artist     - consumed.artist)     : null,
  };

  function Block({
    title,
    createdCount,
    cap,
    consumedCount,
    showRemaining
  }: {
    title: string;
    createdCount: number;
    cap: number | null;
    consumedCount: number;
    showRemaining?: boolean;
  }) {
    return (
      <div className="p-4 flex flex-col items-center justify-center text-center space-y-1">
        <div className="font-semibold">{title}</div>
        <div className="mt-1 text-sm text-neutral-700">
          {cap == null ? (
            <div><span className="font-medium">{createdCount}</span> created</div>
          ) : (
            <div><span className="font-medium">{createdCount}</span> / {cap} created</div>
          )}
          <div><span className="font-medium">{consumedCount}</span> / {createdCount} used</div>
          {showRemaining && cap != null ? (
            <div className="text-xs text-neutral-600 mt-0.5">
              Remaining: <span className="font-medium">{Math.max(0, cap - consumedCount)}</span>
            </div>
          ) : null}
          {cap == null ? (
            <div className="text-xs text-neutral-500 mt-0.5">No cap</div>
          ) : null}
        </div>
      </div>
    );
  }

  return (
    <section className="rounded-2xl border bg-white p-0 overflow-hidden">
      <div className="grid grid-cols-1 md:grid-cols-3 divide-y md:divide-y-0 md:divide-x divide-neutral-200">
        <Block
          title="Early Bird codes:"
          createdCount={created.early_bird}
          cap={caps.early_bird}
          consumedCount={consumed.early_bird}
          showRemaining
        />
        <Block
          title="Artist codes:"
          createdCount={created.artist}
          cap={caps.artist}
          consumedCount={consumed.artist}
          showRemaining
        />
        <Block
          title="Staff codes:"
          createdCount={created.staff}
          cap={null}
          consumedCount={consumed.staff}
        />
      </div>
    </section>
  );
}
